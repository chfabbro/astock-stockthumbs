(()=>{const cpThumbs={};let stockThumbsConfig={};function getTmplString(html,args){return html.call(this,args)}const htmlToElement=htmlString=>{const template=document.createElement("template");const html=htmlString.trim();template.innerHTML=html;return template.content.firstChild};const createThumbList=files=>{const cp=cpThumbs;const stc=stockThumbsConfig;const{utils,overlayText,ctaUrl}=cp;const ctaText=overlayText(utils.getTrackingUrl(`${ctaUrl}?as_campaign=${utils.getHost()}`,stc));const list=document.createDocumentFragment();files.forEach(row=>{const args={ctaText};Object.entries(row).forEach(field=>{if(field[0]==="details_url"){args.details_url=utils.getTrackingUrl(field[1],stc)}else{args[field[0]]=field[1]}});list.appendChild(htmlToElement(getTmplString(cp.html,args)))});return list};const cloneNodeList=name=>{const parent=document.querySelector(name)||null;const nodeClone=parent.cloneNode(true);return nodeClone.childNodes};const emptyNode=name=>{const el=document.querySelector(name);while(el.firstChild){el.removeChild(el.firstChild)}return el};const combineNodes=(source,target,prefs)=>{let count=1;let repeat=true;if(prefs){count=typeof prefs[0]==="number"?prefs[0]:count;repeat=prefs[1]!==undefined&&prefs[1]!==null&&typeof prefs[1]==="boolean"?prefs[1]:repeat}const newList=document.createDocumentFragment();let srcNodeList=Array.from(source.childNodes);let targNodeList=Array.from(target);const getValidNode=arr=>{let node=null;while(arr.length>0&&!node){const tempNode=arr.shift();if(tempNode.nodeType===Node.ELEMENT_NODE){node=tempNode.cloneNode(true)}}return{node,list:arr}};while(targNodeList.length>0){for(let srcIdx=0;srcIdx<count;srcIdx+=1){const nodeCheck=getValidNode(srcNodeList);if(nodeCheck.node){newList.appendChild(nodeCheck.node);srcNodeList=nodeCheck.list}}if(repeat){for(let srcIdx=0;srcIdx<count;srcIdx+=1){const nodeCheck=getValidNode(targNodeList);if(nodeCheck.node){newList.appendChild(nodeCheck.node);targNodeList=nodeCheck.list}}}else{while(targNodeList.length>0){const targetNode=targNodeList.shift();newList.appendChild(targetNode.cloneNode(true))}}}return newList};const StockThumbs=window.StockThumbs||{};StockThumbs.config=StockThumbs.config||{};StockThumbs.config.custom=StockThumbs.config.custom||{};StockThumbs.config.custom.init=(config,stockThumbsMain)=>{stockThumbsConfig=config;const cp=cpThumbs;cp.utils=stockThumbsMain.utils;cp.resultColumns=stockThumbsConfig.custom.result_columns;cp.overlayText=stockThumbsConfig.custom.overlayText;cp.ctaUrl=stockThumbsConfig.custom.ctaUrl;cp.html=stockThumbsConfig.custom.html;if(!cp.overlayText||!cp.html||!cp.resultColumns){throw new Error("StockThumbs config is missing required overlayText, html, or result_columns members.")}else if(!(typeof cp.html==="function")){throw new Error("html element in StockThumbs config must be a function which returns a template string.")}};StockThumbs.config.custom.exec=result=>{const stc=stockThumbsConfig;const source=createThumbList(result);const target=cloneNodeList(stc.parentId);if(!source||!target){throw new Error("ParentID or HTML is invalid")}const combined=combineNodes(source,target,stc.custom.interleave);if(window.jQuery&&window.Masonry){const $jq=window.jQuery;emptyNode(stc.parentId).appendChild(combined);const $cont=$jq(stc.parentId);$cont.imagesLoaded(()=>{$cont.masonry("destroy");$cont.masonry({itemSelector:".edd_download"})})}}})();

//# sourceMappingURL=custom-stockthumbs.min.js.map